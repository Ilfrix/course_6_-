services:
  db:
    image: postgres:16-alpine
    container_name: postgres_db
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: pizzeria
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d pizzeria"]
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    build: ./server
    container_name: fastapi_backend
    depends_on:
      db:
        condition: service_healthy
    environment:
      SQLALCHEMY_DATABASE_URL: ${SQLALCHEMY_DATABASE_URL}
    ports:
      - "8000:8000"

  frontend:
    build: ./client
    container_name: react_frontend
    ports:
      - "3000:3000"
    depends_on:
      - backend

  bot:
    build: ./bot
    container_name: telegram_bot
    depends_on:
      backend:
        condition: service_started
    restart: always
    environment:
      TELEGRAM_BOT_TOKEN: ${TELEGRAM_BOT_TOKEN}
      SQLALCHEMY_DATABASE_URL: ${SQLALCHEMY_DATABASE_URL}


volumes:
  postgres_data:
